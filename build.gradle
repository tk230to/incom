plugins {
	id 'org.springframework.boot' version '2.3.1.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
	id "com.moowork.node" version "1.3.1" // npmをビルドするプラグイン
}

group = 'com.incom'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

// npmのpackage.jsonがあるフォルダを設定
node {
    nodeModulesDir = file("${project.projectDir}/src/main/frontend")
}

// build時にnpm run buildも実行する。
classes.dependsOn npm_run_build

// clean時にnpmのnode_modulesフォルダを削除する。
clean.delete << file("${project.projectDir}/src/main/frontend/node_modules")

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'com.google.firebase:firebase-admin:6.8.1' // 追加
	implementation 'org.springframework.boot:spring-boot-starter-validation' // 追加
	implementation 'com.github.mkopylec:recaptcha-spring-boot-starter:2.3.1' // 追加
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.springframework.security:spring-security-test'
}

test {
	useJUnitPlatform()
}
